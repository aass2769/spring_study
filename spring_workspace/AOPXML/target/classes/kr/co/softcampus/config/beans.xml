<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 빈 등록 -->
	<bean id="xml1" class="kr.co.softcampus.beans.TestBean"/>
	<bean id="advisor1" class="kr.co.softcampus.advisor.AdvisorClass"/>
	
	<!-- AOP 설정 -->
	<aop:config>
		<aop:aspect ref="advisor1">
			<aop:pointcut expression="execution(* method1())" id="point1"/>
			
			<!-- before : 메서드 호출 전-->
			<aop:before method="beforeMethod" pointcut-ref="point1"/>
			
			<!-- after : 메서드 호출 후. 예외 관계없음-->
			<aop:after method="afterMethod" pointcut-ref="point1"/>
			
			<!-- around : 메세드 호출 전, 후-->
			<aop:around method="aroundMethod" pointcut-ref="point1"/>
			
			<!-- afterReturning : 메서드 호출 후. 예외가 발생하지 않을경우만-->
			<aop:after-returning method="afterReturningMethod" pointcut-ref="point1"/>
			
			<!-- afterThrowing : 메서드 호출 후. 예외가 발생 했을 경우만-->
			<aop:after-throwing method="afterThrowingMethod" pointcut-ref="point1" throwing="e1"/>
		</aop:aspect>
	</aop:config>
</beans>