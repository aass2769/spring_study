package kr.co.softcampus.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Scope;

import kr.co.softcampus.beans.TestBean1;
import kr.co.softcampus.beans.TestBean2;
import kr.co.softcampus.beans.TestBean3;
import kr.co.softcampus.beans.TestBean4;

@Configuration
public class BeanConfigClass {

	@Bean		//이것도 singleton이며 id는 java1이라고 볼 수 있다.
	public TestBean1 java1() {
	
		TestBean1 t1 = new TestBean1();
		return t1;
	}
	
	@Bean(name = "java600")	//name속성으로 재정의하면 method이름이 아니라 name속성의 java600이 빈의 이름이 된다.
	public TestBean1 java500() {
		
		TestBean1 t1 = new TestBean1();
		return t1;
	}
	
	@Bean
	@Lazy	//getBean메서드 호출해야 객체가 생성된다. 또 getBean을 했을 떄는 같은 객체를 반환한다(singleton)
	public TestBean2 java2() {
		
		TestBean2 t2 = new TestBean2();
		return t2;
	}
	
	@Bean
	@Scope("prototype") //getBean 메서드를 호출해야 객체가 생성된다. 또 getBean을 했을 때 새로운 객체를 반환한다.(prototype)
	public TestBean3 java3() {
		
		TestBean3 t3 = new TestBean3();
		return t3;
	}
	
	@Bean
	public TestBean4 java4() {
		
		TestBean4 t4 = new TestBean4();
		return t4;
	}
	
	@Bean
	public TestBean4 java5() {
		
		TestBean4 t4 = new TestBean4();
		return t4;
	}
}
